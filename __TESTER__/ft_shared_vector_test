
-------------- CONSTRUCTOR ----------------
Test default constructor 1: SUCCESS
Test size constructor 1: SUCCESS
Test range constructor 1 (part 1/2): SUCCESS

42 0
Test range constructor 1 (part 2/2): 
{ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }
Test copy constructor 1 (part 1/2): SUCCESS
Test copy constructor 1 (part 2/2): 
{ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }

-------------- ASSIGNATION ----------------
Test 'operator=' 1: 
[42]
{ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }
Test 'assign' 1: 
[42]
{ 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }
Test 'assign' 2: 
[42]
{ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }

-------------- ELEMENT ACCESS ----------------
0
'back' test 1: -1
'back' test 2: -1
'back' test 3: 0
 DON'T ABORT256
'front' test 1: -1
'front' test 2: 0
'front' test 3: 0
'front' test 4: 42

-------------- ITERATORS ----------------
Test 'iterators' 1: 
{ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }
Test 'iterator' 4: 
[0]
[1]

-------------- CAPACITY ----------------
'Empty' test 1: SUCCESS
'Empty' test 2: SUCCESS
'Empty' test 3: SUCCESS
'Empty' test 4: SUCCESS
'Empty' test 5: SUCCESS
'Size' test 1: 0
'Size' test 2: 0
'Size' test 3: 21
'Max size' test 1: 2305843009213693951
'Max size' test 2: 2305843009213693951
'Max size' test 3: 2305843009213693951

-------------- MODIFIERS ----------------
'Clear' test 1: 0 1
'Clear' test 2: 0 1
'Insert test 1: 41 83
{  { 42 ; 0 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } { 42 ; 42 } }
'Insert' test 2: 54
{ 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 } 
 SEGMENTATION FAULT
'Erase' test 1: 34
 { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42  }
'Erase' test 2: 33
 { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42  }

-------------- NON MEMBERS ----------------
Test 'operator==' 1: 1
Test 'operator!=' 1: 0
Test 'operator<' 1: 1
Test 'operator<=' 1: 0
Test 'operator>' 1: 1
Test 'operator>=' 1: 0
Test 'operator==' 2: 1
Test 'operator!=' 2: 0
Test 'operator<' 2: 1
Test 'operator<=' 2: 0
Test 'operator>' 2: 1
Test 'operator>=' 2: 0
Test 'operator==' 3: 1
Test 'operator!=' 3: 0
Test 'operator<' 3: 1
Test 'operator<=' 3: 0
Test 'operator>' 3: 1
Test 'operator>=' 3: 0
'Swap' test 1: 
lhs: { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }
rhs: { 1695496554 21965 965435408 21960 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 255 }
Test 'operator==' 4: 1
Test 'operator!=' 4: 0
Test 'operator<' 4: 1
Test 'operator<=' 4: 0
Test 'operator>' 4: 1
Test 'operator>=' 4: 0
